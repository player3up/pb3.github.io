[{"categories":["documentation"],"content":"了解如何在 LoveIt 主题中快速, 直观地创建和组织内容.","date":"2020-03-05","objectID":"/index.zh-cn/","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"了解如何在 LoveIt 主题中快速, 直观地创建和组织内容. ","date":"2020-03-05","objectID":"/index.zh-cn/:0:0","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"1 内容组织 以下是一些方便你清晰管理和生成文章的目录结构建议: 保持博客文章存放在 content/posts 目录, 例如: content/posts/我的第一篇文章.md 保持简单的静态页面存放在 content 目录, 例如: content/about.md 本地资源组织 本地资源引用\r有三种方法来引用图片和音乐等本地资源: 使用页面包\r中的页面资源\r. 你可以使用适用于 Resources.GetMatch 的值或者直接使用相对于当前页面目录的文件路径来引用页面资源. 将本地资源放在 assets 目录中, 默认路径是 /assets. 引用资源的文件路径是相对于 assets 目录的. 将本地资源放在 static 目录中, 默认路径是 /static. 引用资源的文件路径是相对于 static 目录的. 引用的优先级符合以上的顺序. 在这个主题中的很多地方可以使用上面的本地资源引用, 例如 链接, 图片, image shortcode, music shortcode 和前置参数中的部分参数. 页面资源或者 assets 目录中的图片处理\r会在未来的版本中得到支持. 非常酷的功能! ","date":"2020-03-05","objectID":"/index.zh-cn/:1:0","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"2 前置参数 Hugo 允许你在文章内容前面添加 yaml, toml 或者 json 格式的前置参数. Note\r不是所有的以下前置参数都必须在你的每篇文章中设置. 只有在文章的参数和你的 网站设置\r中的 page 部分不一致时才有必要这么做.\r这是一个前置参数例子: --- title: \"我的第一篇文章\" subtitle: \"\" date: 2020-03-04T15:58:26+08:00 lastmod: 2020-03-04T15:58:26+08:00 draft: true author: \"\" authorLink: \"\" description: \"\" license: \"\" images: [] tags: [] categories: [] featuredImage: \"\" featuredImagePreview: \"\" hiddenFromHomePage: false hiddenFromSearch: false twemoji: false lightgallery: true ruby: true fraction: true fontawesome: true linkToMarkdown: true rssFullText: false toc: enable: true auto: true code: copy: true maxShownLines: 50 math: enable: false # ... mapbox: # ... share: enable: true # ... comment: enable: true # ... library: css: # someCSS = \"some.css\" # 位于 \"assets/\" # 或者 # someCSS = \"https://cdn.example.com/some.css\" js: # someJS = \"some.js\" # 位于 \"assets/\" # 或者 # someJS = \"https://cdn.example.com/some.js\" seo: images: [] # ... --- title: 文章标题. subtitle: 文章副标题. date: 这篇文章创建的日期时间. 它通常是从文章的前置参数中的 date 字段获取的, 但是也可以在 网站配置\r中设置. lastmod: 上次修改内容的日期时间. draft: 如果设为 true, 除非 hugo 命令使用了 --buildDrafts/-D 参数, 这篇文章不会被渲染. author: 文章作者. authorLink: 文章作者的链接. description: 文章内容的描述. license: 这篇文章特殊的许可. images: 页面图片, 用于 Open Graph 和 Twitter Cards. tags: 文章的标签. categories: 文章所属的类别. featuredImage: 文章的特色图片. featuredImagePreview: 用在主页预览的文章特色图片. hiddenFromHomePage: 如果设为 true, 这篇文章将不会显示在主页上. hiddenFromSearch: 如果设为 true, 这篇文章将不会显示在搜索结果中. twemoji: 如果设为 true, 这篇文章会使用 twemoji. lightgallery: 如果设为 true, 文章中的图片将可以按照画廊形式呈现. ruby: 如果设为 true, 这篇文章会使用 上标注释扩展语法\r. fraction: 如果设为 true, 这篇文章会使用 分数扩展语法\r. fontawesome: 如果设为 true, 这篇文章会使用 Font Awesome 扩展语法\r. linkToMarkdown: 如果设为 true, 内容的页脚将显示指向原始 Markdown 文件的链接. rssFullText: 如果设为 true, 在 RSS 中将会显示全文内容. toc: 和 网站配置\r中的 params.page.toc 部分相同. code: 和 网站配置\r中的 params.page.code 部分相同. math: 和 网站配置\r中的 params.page.math 部分相同. mapbox: 和 网站配置\r中的 params.page.mapbox 部分相同. share: 和 网站配置\r中的 params.page.share 部分相同. comment: 和 网站配置\r中的 params.page.comment 部分相同. library: 和 网站配置\r中的 params.page.library 部分相同. seo: 和 网站配置\r中的 params.page.seo 部分相同. Tip\rfeaturedImage 和 featuredImagePreview 支持本地资源引用\r的完整用法. 如果带有在前置参数中设置了 name: featured-image 或 name: featured-image-preview 属性的页面资源, 没有必要在设置 featuredImage 或 featuredImagePreview: resources: - name: featured-image src: featured-image.jpg - name: featured-image-preview src: featured-image-preview.jpg ","date":"2020-03-05","objectID":"/index.zh-cn/:2:0","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"3 内容摘要 LoveIt 主题使用内容摘要在主页中显示大致文章信息。Hugo 支持生成文章的摘要. 文章摘要预览\r","date":"2020-03-05","objectID":"/index.zh-cn/:3:0","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"自动摘要拆分 默认情况下, Hugo 自动将内容的前 70 个单词作为摘要. 你可以通过在 网站配置\r中设置 summaryLength 来自定义摘要长度. 如果您要使用 CJK中文/日语/韩语 语言创建内容, 并且想使用 Hugo 的自动摘要拆分功能，请在 网站配置\r中将 hasCJKLanguage 设置为 true. ","date":"2020-03-05","objectID":"/index.zh-cn/:3:1","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"手动摘要拆分 另外, 你也可以添加 \u003c!--more--\u003e 摘要分割符来拆分文章生成摘要. 摘要分隔符之前的内容将用作该文章的摘要. Note\r请小心输入\u003c!--more--\u003e ; 即全部为小写且没有空格.\r","date":"2020-03-05","objectID":"/index.zh-cn/:3:2","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"前置参数摘要 你可能希望摘要不是文章开头的文字. 在这种情况下, 你可以在文章前置参数的 summary 变量中设置单独的摘要. ","date":"2020-03-05","objectID":"/index.zh-cn/:3:3","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"使用文章描述作为摘要 你可能希望将文章前置参数中的 description 变量的内容作为摘要. 你仍然需要在文章开头添加 \u003c!--more--\u003e 摘要分割符. 将摘要分隔符之前的内容保留为空. 然后 LoveIt 主题会将你的文章描述作为摘要. ","date":"2020-03-05","objectID":"/index.zh-cn/:3:4","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"摘要选择的优先级顺序 由于可以通过多种方式指定摘要, 因此了解顺序很有用. 如下: 如果文章中有 \u003c!--more--\u003e 摘要分隔符, 但分隔符之前没有内容, 则使用描述作为摘要. 如果文章中有 \u003c!--more--\u003e 摘要分隔符, 则将按照手动摘要拆分的方法获得摘要. 如果文章前置参数中有摘要变量, 那么将以该值作为摘要. 按照自动摘要拆分方法. Note\r不建议在摘要内容中包含富文本块元素, 这会导致渲染错误. 例如代码块, 图片, 表格等.\r","date":"2020-03-05","objectID":"/index.zh-cn/:3:5","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"4 Markdown 基本语法 这部分内容在 Markdown 基本语法页面\r中介绍. ","date":"2020-03-05","objectID":"/index.zh-cn/:4:0","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"5 Markdown 扩展语法 LoveIt 主题提供了一些扩展的语法便于你撰写文章. ","date":"2020-03-05","objectID":"/index.zh-cn/:5:0","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"Emoji 支持 这部分内容在 Emoji 支持页面\r中介绍. ","date":"2020-03-05","objectID":"/index.zh-cn/:5:1","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"数学公式 LoveIt 基于 $\\KaTeX$\r提供数学公式的支持. 在你的 网站配置\r中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. $\\KaTeX$ 根据 特定的分隔符 来自动渲染公式. Tip\r有一份 $\\KaTeX$ 中支持的 $\\TeX$ 函数\r清单.\rNote\r由于 Hugo 在渲染 Markdown 文档时会根据 _/*/\u003e\u003e 之类的语法生成 HTML 文档, 并且有些转义字符形式的文本内容 (如 \\(/\\)/\\[/\\]/\\\\) 会自动进行转义处理, 因此需要对这些地方进行额外的转义字符表达来实现自动渲染: _ -\u003e \\_ * -\u003e \\* \u003e\u003e -\u003e \\\u003e\u003e \\( -\u003e \\\\( \\) -\u003e \\\\) \\[ -\u003e \\\\[ \\] -\u003e \\\\] \\\\ -\u003e \\\\\\\\ LoveIt 主题支持 raw shortcode\r以避免这些转义字符, 它可以帮助您编写原始数学公式内容. 一个 raw 示例: 行内公式: 公式块: 呈现的输出效果如下: 行内公式: 公式块: 行内公式 默认的行内公式分割符有: $ ... $ \\( ... \\) (转义的: \\\\( ... \\\\)) 例如: $c = \\pm\\sqrt{a^2 + b^2}$ 和 \\\\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\\\) 呈现的输出效果如下: $c = \\pm\\sqrt{a^2 + b^2}$ 和 \\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\) 公式块 默认的公式块分割符有: $$ ... $$ \\[ ... \\] (转义的: \\\\[ ... \\\\]) \\begin{equation} ... \\end{equation} (不编号的: \\begin{equation*} ... \\end{equation*}) \\begin{align} ... \\end{align} (不编号的: \\begin{align*} ... \\end{align*}) \\begin{alignat} ... \\end{alignat} (不编号的: \\begin{alignat*} ... \\end{alignat*}) \\begin{gather} ... \\end{gather} (不编号的: \\begin{gather*} ... \\end{gather*}) \\begin{CD} ... \\end{CD} 例如: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] \\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*} \\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}\\_{i}=\\mathbf{E}\\_{1}+\\mathbf{E}\\_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation} \\begin{align} a\u0026=b+c \\\\\\\\ d+e\u0026=f \\end{align} \\begin{alignat}{2} 10\u0026x+\u00263\u0026y = 2 \\\\\\\\ 3\u0026x+\u002613\u0026y = 4 \\end{alignat} \\begin{gather} a=b \\\\\\\\ e=b+c \\end{gather} \\begin{CD} A @\u003ea\\\u003e\u003e B \\\\\\\\ @VbVV @AAcA \\\\\\\\ C @= D \\end{CD} 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] \\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*} \\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation} \\begin{align} a\u0026=b+c \\\\ d+e\u0026=f \\end{align} \\begin{alignat}{2} 10\u0026x+\u00263\u0026y = 2 \\\\ 3\u0026x+\u002613\u0026y = 4 \\end{alignat} \\begin{gather} a=b \\\\ e=b+c \\end{gather} \\begin{CD} A @\u003ea\u003e\u003e B \\\\ @VbVV @AAcA \\\\ C @= D \\end{CD} Tip\r你可以在 网站配置\r中自定义行内公式和公式块的分割符.\rCopy-tex Copy-tex\r是一个 $\\KaTeX$ 的插件. 通过这个扩展, 在选择并复制 $\\KaTeX$ 渲染的公式时, 会将其 $\\LaTeX$ 源代码复制到剪贴板. 在你的 网站配置\r中的 [params.math] 下面设置属性 copyTex = true 来启用 Copy-tex. 选择并复制上一节中渲染的公式, 可以发现复制的内容为 $\\LaTeX$ 源代码. mhchem mhchem\r是一个 $\\KaTeX$ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. 在你的 网站配置\r中的 [params.math] 下面设置属性 mhchem = true 来启用 mhchem. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2020-03-05","objectID":"/index.zh-cn/:5:2","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"字符注音或者注释 LoveIt 主题支持一种 字符注音或者注释 Markdown 扩展语法: [Hugo]^(一个开源的静态网站生成工具) 呈现的输出效果如下: Hugo一个开源的静态网站生成工具 ","date":"2020-03-05","objectID":"/index.zh-cn/:5:3","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"分数 LoveIt 主题支持一种 分数 Markdown 扩展语法: [浅色]/[深色] [99]/[100] 呈现的输出效果如下: 浅色/深色 90/100 ","date":"2020-03-05","objectID":"/index.zh-cn/:5:4","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"Font Awesome LoveIt 主题使用 Font Awesome\r作为图标库. 你同样可以在文章中轻松使用这些图标. 从 Font Awesome 网站\r上获取所需的图标 class. 去露营啦! :(fas fa-campground fa-fw): 很快就回来. 真开心! :(far fa-grin-tears): 呈现的输出效果如下: 去露营啦!  很快就回来. 真开心! ","date":"2020-03-05","objectID":"/index.zh-cn/:5:5","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":"转义字符 在某些特殊情况下 (编写这个主题文档时 ), 你的文章内容会与 Markdown 的基本或者扩展语法冲突, 并且无法避免. 转义字符语法可以帮助你渲染出想要的内容: {?X} -\u003e X 例如, 两个 : 会启用 emoji 语法. 但有时候这不是你想要的结果. 可以像这样使用转义字符语法: {?:}joy: 呈现的输出效果如下: :joy: 而不是 😂 Tip\r这个方法可以间接解决一个还未解决的 Hugo 的 issue\r.\r另一个例子是: [link{?]}(#escape-character) 呈现的输出效果如下: [link](#escape-character) 而不是 link\r. ","date":"2020-03-05","objectID":"/index.zh-cn/:5:6","tags":["content","Markdown"],"title":"主题文档 - 内容","uri":"/index.zh-cn/"},{"categories":["Hugo日记"],"content":"这篇文章记录了我的整个建站过程.","date":"2019-12-01","objectID":"/hugodp/","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"这篇文章记录了我的整个建站过程. 建站记录 ","date":"2019-12-01","objectID":"/hugodp/:0:0","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"建立新博客 hugo new site myblog ","date":"2019-12-01","objectID":"/hugodp/:1:0","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"第一次新建文章 hugo new posts/first-post.md hugo -D #执行该命令生成public Tip\rhugo该命令应该==放在最后==，在一切构建都完成再进行\r","date":"2019-12-01","objectID":"/hugodp/:2:0","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"本地构建bug 在Windows环境下使用git bash进行构建无法成功，使用powershell可以完美做到本地构建 hugo server -t LoveIt --buildDrafts //在本地构建博客 ","date":"2019-12-01","objectID":"/hugodp/:2:1","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"部署到github 在github新建仓库，并以github.io结尾 此处使用git bash git init git add . git commit -m \"first commit\" git remote add origin https://github.com/player3up/player3up.github.io.git git remote -v #列出当前仓库中已配置的远程仓库，并显示它们的 URL git remote rm origin #如果提示已存在，可使用这个命令删除 git pull --rebase origin master git push origin master git config --global credential.helper cache #在其他命令开始前，避免每次输入密码 credential-cache是 Git 提供的一个凭证管理器，用于在一段时间内保存用户的凭证（例如用户名和密码），以便能够在不需要再次输入凭证的情况下进行后续的操作。(如果git版本过旧无法使用该命令) 且需要检查是否有与凭证管理相关的配置项 credential.helper=cache 若没有则需要手动添加 git config --global credential.helper cache Tip\rps:使用后github部署查看时需要vpn\r","date":"2019-12-01","objectID":"/hugodp/:3:0","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"解决重复输入用户名密钥问题 在安装git时将其应用到powershell上，在第一次使用密码时会要求登录，完美解决重复问题，也不需要上述命令来保存 ","date":"2019-12-01","objectID":"/hugodp/:3:1","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"解决上传至GitHub使用pages构建问题 在使用GitHub pages时会出现构建问题 此文\r中得到完美解决 ","date":"2019-12-01","objectID":"/hugodp/:3:2","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"git push 错误 ! [rejected] master -\u003e master (fetch first) error: failed to push some refs to 'https://github.com/player3up/player3up.github.io.git' hint: Updates were rejected because the remote contains work that you do not hint: have locally. This is usually caused by another repository pushing to hint: the same ref. If you want to integrate the remote changes, use hint: 'git pull' before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details. 解决办法： 先重新拉取，再push git pull --rebase origin master git push -u origin master ","date":"2019-12-01","objectID":"/hugodp/:3:3","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"LoveIT主题 头像位置为相对位置，且跟配置文件有关的图像放在themes/“你主题的名字”/static里面，而博客文章的图像放在static里面 ","date":"2019-12-01","objectID":"/hugodp/:4:0","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"语言设置 在增加语言设置时需注意将defaultContentLanguage = \"zh-cn\"#默认中文，语句放在开头处，在末尾放置可能会导致语句无效 ","date":"2019-12-01","objectID":"/hugodp/:4:1","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"头像及网页logo 将所需图片放置在themes/“你主题的名字”/static路径内 通过更改根目录的hugo.toml文件的语句例如 # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"/b5.png\" # 标题名称 name = \"pb3's Blog\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" logo语句位置 # 应用图标配置 [params.app] # 当添加到 iOS 主屏幕或者 Android 启动器时的标题, 覆盖默认标题 title = \"我的网站\" # 是否隐藏网站图标资源链接 noFavicon = false # 更现代的 SVG 网站图标, 可替代旧的 .png 和 .ico 文件 svgFavicon = \"/b5.png\" # Android 浏览器主题色 themeColor = \"#ffffff\" 以及应用图标位置我这里的图片名称是b5.png即可更改网页图标 ","date":"2019-12-01","objectID":"/hugodp/:4:2","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"文章摘要 在编辑文章预览部分时，其分隔符和变量赋值符号发生变化 有以下几点 分隔符： --- weight: 4 --- ⬇（变为） +++ （hugo自动生成） weight: 4 +++ 赋值符号由 weight: 4 ⬇（变为） weight= 4（hugo自动生成） 可以在博客根目录的archetypes/default.md文件中编辑文章样式，该文件会影响指令生成的文章 ","date":"2019-12-01","objectID":"/hugodp/:5:0","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["Hugo日记"],"content":"摘要图片 在设置文章摘要图片时根据hugo的页面包\r中的页面资源\r.来进行编辑，需将文章名字改为index.md、_index.md这样才使用resources资源进行引用 ","date":"2019-12-01","objectID":"/hugodp/:5:1","tags":["Hugo日记"],"title":"Hugo开发日记","uri":"/hugodp/"},{"categories":["documentation"],"content":"bilibili shortcode 提供了一个内嵌的用来播放 bilibili 视频的响应式播放器.","date":"2020-03-03","objectID":"/index.zh-cn/","tags":["shortcodes"],"title":"主题文档 - bilibili Shortcode","uri":"/index.zh-cn/"},{"categories":["documentation"],"content":" bilibili shortcode 提供了一个内嵌的用来播放 bilibili 视频的响应式播放器. 如果视频只有一个部分, 则仅需要视频的 BV id, 例如: https://www.bilibili.com/video/BV1Sx411T7QQ 一个 bilibili 示例: {{\u003c bilibili BV1Sx411T7QQ \u003e}} 或者 {{\u003c bilibili id=BV1Sx411T7QQ \u003e}} 呈现的输出效果如下: 如果视频包含多个部分, 则除了视频的 BV id 之外, 还需要 p, 默认值为 1, 例如: https://www.bilibili.com/video/BV1TJ411C7An?p=3 一个带有 p 参数的 bilibili 示例: {{\u003c bilibili BV1TJ411C7An 3 \u003e}} 或者 {{\u003c bilibili id=BV1TJ411C7An p=3 \u003e}} 呈现的输出效果如下: ","date":"2020-03-03","objectID":"/index.zh-cn/:0:0","tags":["shortcodes"],"title":"主题文档 - bilibili Shortcode","uri":"/index.zh-cn/"},{"categories":null,"content":"关于 LoveIt","date":"2019-08-02","objectID":"/about/","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"\r LoveIt\r是一个由 Dillon\r开发的简洁、优雅且高效的 Hugo\r博客主题。 它的原型基于 LeaveIt 主题\r和 KeepIt 主题\r。 Hugo 主题 LoveIt\r","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"特性 性能和 SEO  性能优化：在 Google PageSpeed Insights\r中， 99/100 的移动设备得分和 100/100 的桌面设备得分  使用基于 JSON-LD 格式 的 SEO SCHEMA 文件进行 SEO 优化  支持 Google Analytics\r 支持 Fathom Analytics\r 支持搜索引擎的网站验证 (Google, Bind, Yandex and Baidu)  支持所有第三方库的 CDN  基于 lazysizes\r自动转换图片为懒加载 外观和布局  桌面端/移动端 响应式布局  浅色/深色 主题模式  全局一致的设计语言  支持分页  易用和自动展开的文章目录  支持多语言和国际化  美观的 CSS 动画 社交和评论系统  支持 Gravatar\r头像  支持本地头像  支持多达 64 种社交链接  支持多达 24 种网站分享  支持 Disqus\r评论系统  支持 Gitalk\r评论系统  支持 Valine\r评论系统  支持 Facebook\r评论系统  支持 Telegram comments\r评论系统  支持 Commento\r评论系统  支持 Utterances\r评论系统 扩展功能  支持基于 Lunr.js\r或 algolia\r的搜索  支持 Twemoji  支持代码高亮  一键复制代码到剪贴板  支持基于 lightGallery\r的图片画廊  支持 Font Awesome\r图标的扩展 Markdown 语法  支持上标注释的扩展 Markdown 语法  支持分数的扩展 Markdown 语法  支持基于 $\\KaTeX$\r的数学公式  支持基于 mermaid\r的图表 shortcode  支持基于 ECharts\r的交互式数据可视化 shortcode  支持基于 Mapbox GL JS\r的 Mapbox shortcode  支持基于 APlayer\r和 MetingJS\r的音乐播放器 shortcode  支持 Bilibili 视频 shortcode  支持多种注释的 shortcode  支持自定义样式的 shortcode  支持自定义脚本的 shortcode  支持基于 TypeIt\r的打字动画 shortcode  支持基于 cookieconsent\r的 Cookie 许可横幅 … ","date":"2019-08-02","objectID":"/about/:0:1","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"许可协议 LoveIt 根据 MIT 许可协议授权。 更多信息请查看 LICENSE 文件\r。 ","date":"2019-08-02","objectID":"/about/:0:2","tags":null,"title":"关于 LoveIt","uri":"/about/"},{"categories":null,"content":"特别感谢 LoveIt 主题中用到了以下项目，感谢它们的作者： normalize.css\rFont Awesome\rSimple Icons\rAnimate.css\rautocomplete\rLunr.js\ralgoliasearch\rlazysizes\robject-fit-images\rTwemoji\remoji-data\rlightGallery\rclipboard.js\rSharer.js\rTypeIt\r$\\KaTeX$\rmermaid\rECharts\rMapbox GL JS\rAPlayer\rMetingJS\rGitalk\rValine\rcookieconsent\r","date":"2019-08-02","objectID":"/about/:0:3","tags":null,"title":"关于 LoveIt","uri":"/about/"}]